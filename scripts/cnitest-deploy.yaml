apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnitest-node
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cnitest-node
  labels:
    k8s-app: cnitest-node
spec:
  selector:
    matchLabels:
      k8s-app: cnitest-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: cnitest-node
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node.cloudprovider.kubernetes.io/uninitialized
          effect: NoSchedule
          value: "true"
        - key: CriticalAddonsOnly
          operator: "Exists"
      serviceAccountName: cnitest-node
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 0
      priorityClassName: system-node-critical
      initContainers:
        - name: install-cni
          image: cnitest:latest
          imagePullPolicy: IfNotPresent
          command: [ "/install-cni-plugin.sh" ]
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
          securityContext:
            privileged: true
      containers:
        - name: cnitest-node
          image: cnitest:latest
          imagePullPolicy: IfNotPresent
      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
